<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_lara_idle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>spr_lara_mask</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize Variables
grav = 0.2;
hsp = 0;
hsp_carry = 0;
vsp = 0;
movespeed = 4;
canmove = true;

fallamount = 0;

jumps = 0;
jumpsmax = 1;

jumpspeed_normal = 7;
jumpspeed_powerup = 10;

jumpspeed = jumpspeed_normal;

key_down = 0;

image_speed = 0.15;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>jumps -= 1;
vsp = -jumpspeed;

if(move != 0)
    sprite_index = spr_lara_jump_forward;
else
    sprite_index = spr_lara_jump_up;


canmove = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Input code

//Get player's input
key_right = keyboard_check(vk_right);
key_left = -keyboard_check(vk_left);
key_jump = keyboard_check_pressed(vk_alt);
key_jump_held = keyboard_check(vk_space);
key_down = keyboard_check(vk_down);

//React to inputs
if(canmove)
    move = key_left + key_right;
    
hsp = move * movespeed;

if(vsp &lt; 10)
    vsp += grav;

if(place_meeting(x, y+1, obj_wall))
{
    jumps = jumpsmax;
}

if(key_jump) &amp;&amp; (jumps &gt; 0)
{
    canmove = false;
    sprite_index = spr_lara_jump;
    alarm[0] = 20;
}

//if(vsp &lt; 0) &amp;&amp; (!key_jump_held)
    //vsp = max(vsp, -jumpspeed / 2);

//if(key_jump) &amp;&amp; (place_meeting(x+1, y, obj_wall)) || place_meeting(x-1, y, obj_wall)
//{
    //vsp = -jumpspeed;
//}

var hsp_final = hsp + hsp_carry;
hsp_carry = 0;

//Horizontal Collision
if(place_meeting(x+hsp_final, y, obj_wall))
{
    while(!place_meeting(x+sign(hsp_final), y, obj_wall))
    {
        x += sign(hsp_final);
    }
    hsp_final = 0;
    hsp = 0;
}
x += hsp_final;

//Vertical Collision
if(place_meeting(x, y+vsp, obj_wall))
{
    while(!place_meeting(x, y+sign(vsp), obj_wall))
    {
        y += sign(vsp);
    }
    vsp = 0;
}
y += vsp;

//Animate
if(move != 0)
    image_xscale = move;
if(place_meeting(x, y+1, obj_wall))
{
    if(move != 0 &amp;&amp; canmove)
        sprite_index = spr_lara_run;
    else if (move == 0 &amp;&amp; canmove)
        sprite_index = spr_lara_idle;
}
else
{
    //if(vsp &lt; 0)
        //sprite_index = spr_lara_jump;
    //else
    //{
        //sprite_index = spr_lara_fall;
    //}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
